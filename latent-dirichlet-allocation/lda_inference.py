# -*- coding: utf-8 -*-
"""Lda_Inference.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1txfthJgbnfRJLvCnRnTd8cQfpsX1RfSg
"""

import numpy as np
import pandas as pd
from scipy.special import digamma
from math import lgamma

def lda_compute_likelihood(self, doc, lda_model, phi, var_gamma):
  #counts: number of occurences for nth word in counts
  #words: nth word of vocabulary
  likelihood = 0
  digsum = 0
  var_gamma_sum = 0
  K = lda_model.num_topics
  alpha = lda_model.alpha
  N = doc.length

  #Initialize
  dig = digamma(var_gamma)
  var_gamma_sum = np.sum(var_gamma)
  digsum = digamma(var_gamma_sum)

  l1 = lgamma(alpha * K)
  l2 = (K * lgamma(alpha))
  l3 = lgamma(var_gamma_sum)
  likelihood =  l1 - l2 - l3

  for k in range(K):
    ll1 = (alpha-1) * (dig[k] - digsum)
    ll2 = lgamma(var_gamma[k])
    ll3 = (var_gamma[k] - 1) * (dig[k] - digsum)
    lieklihood += ll1 + ll2 - ll3
  
    for n in range(N):
      if phi[n][k] > 0:
          lll1 = phi[n][k] * ((dig[k] - digsum) - np.log(phi[n][k]))
          lll2 = doc.counts[n]* ll1 + lda_model.log_prob_w[k, doc.words[n]]
  
  return likelihood

def infer(self):
  data = pd.read_csv('')
  #Load model
  model_filename = ''
  model = pickle.load(open(model_filename, 'rb'))
  #To complete depending on the data preprocessing